{"version":3,"sources":["logo.svg","AudioButton.js","soundGrid.js","audio/120_future_funk_beats_25.mp3","App.js","audio/120_stutter_breakbeats_16.mp3","audio/Bass Warwick heavy funk groove on E 120 BPM.mp3","audio/electric guitar coutry slide 120bpm - B.mp3","audio/FUD_120_StompySlosh.mp3","audio/GrooveB_120bpm_Tanggu.mp3","audio/MazePolitics_120_Perc.mp3","audio/PAS3GROOVE1.03B.mp3","audio/SilentStar_120_Em_OrganSynth.mp3","reportWebVitals.js","index.js"],"names":["AudioButton","prop","useState","color","setColor","className","onClick","value","style","background","text","randomColor","require","SoundGrid","playing","soundDict","index","playableSound","playAll","console","log","forEach","sound","audio","paused","currentTime","play","length","paths","path","name","split","Audio","addEventListener","a","onSoundClick","v","find","id","pause","filter","checkPlays","push","Grid","container","spacing","item","xs","justifyContent","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee6a8df6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState} from \"react\";\r\n\r\nexport default function AudioButton(prop) {\r\n\r\n    const [color, setColor] = useState(false);\r\n\r\n\r\n    return (\r\n        <div className=\"box\">\r\n        <button className=\"AudioButton\"\r\n            onClick={() => {\r\n                prop.onClick(prop.value);\r\n                setColor(!color)\r\n            }}\r\n            style={{\r\n                \r\n                background: color ?\"radial-gradient( white,\"+prop.color+\")\":prop.color,\r\n                color:color?\"black\":\"white\",\r\n                \r\n            }}\r\n        >   \r\n            {prop.text}\r\n            {/* <PlayPause buttonToShow={showPlayButton ? \"play\" : \"pause\"} /> */}\r\n        </button></div>\r\n    )\r\n}","import {useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AudioButton from \"./AudioButton\";\r\nconst randomColor = require('randomcolor');\r\nexport default function SoundGrid(prop){\r\n    // const sounds = prop.paths.map((path)=>new Audio(path))\r\n    let playing = false\r\n    let soundDict = {}\r\n    let index= 0\r\n    let playableSound = []\r\n    function pauseAll(){\r\n        // playing = false\r\n        playableSound.forEach((sound=> {sound.audio.pause()\r\n        sound.audio.currentTime = 0\r\n        }))\r\n\r\n    }\r\n    function playAll(){\r\n        console.log(playing)\r\n        // if(playing){\r\n\r\n\r\n            playableSound.forEach((sound)=> {\r\n                if(sound.audio.paused) {\r\n                    sound.audio.currentTime = 0\r\n                    sound.audio.play()\r\n                }\r\n            })\r\n\r\n            playing = playableSound.length>0\r\n\r\n    }\r\n    console.log(prop.paths)\r\n    for (const path of prop.paths) {\r\n        let name = path.split(\"/\")\r\n        name = name[name.length - 1].split(\".\")[0]\r\n        soundDict[index] = {audio:new Audio(path),name:name}\r\n        soundDict[index].audio.addEventListener('ended', playAll, false)\r\n\r\n        index++\r\n\r\n    }\r\n    console.log(soundDict)\r\n    async function checkPlays(){\r\n\r\n        playing = playableSound.length > 0\r\n    }\r\n    function onSoundClick(v){\r\n        // let v = e.currentTarget.value\r\n        console.log(soundDict[v],v)\r\n        const found = playableSound.find(sound => sound.id === v)\r\n        if(found){\r\n            soundDict[v].audio.pause()\r\n            soundDict[v].audio.currentTime=0\r\n            playableSound = playableSound.filter(sound => sound.id !== v)\r\n            checkPlays()\r\n        }else{\r\n            playableSound.push({id:v,audio:soundDict[v].audio})\r\n            if(!playing){\r\n\r\n                soundDict[v].audio.play()\r\n                playing = true\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"content\">\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Grid container justifyContent=\"center\" spacing={1}>\r\n                    {[0, 1, 2].map((value) => (\r\n                        <Grid key={value} item>\r\n                            <AudioButton text={soundDict[value].name} color = {randomColor()} value={value} onClick={onSoundClick}>value</AudioButton>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container justifyContent=\"center\" spacing={1}>\r\n                    {[3, 4, 5].map((value) => (\r\n                        <Grid key={value} item>\r\n                            <AudioButton  text={soundDict[value].name} color = {randomColor()} value={value} onClick={onSoundClick}>value</AudioButton>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container justifyContent=\"center\" spacing={1}>\r\n                    {[6, 7, 8].map((value) => (\r\n                        <Grid key={value} item>\r\n                            <AudioButton text={soundDict[value].name} color = {randomColor()} value={value} onClick={onSoundClick}>value</AudioButton>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n        <button className=\"Stop\" onClick={pauseAll}>pause</button>\r\n        \r\n        \r\n        <button className=\"Play\" onClick={playAll}>play</button>\r\n        \r\n        </div>\r\n    )\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/120_future_funk_beats_25.5eb417fc.mp3\";","import logo from './logo.svg';\r\nimport './App.css';\r\n// import AudioButton from \"./AudioButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SoundGrid from \"./soundGrid\";\r\nimport audio1 from './audio/120_future_funk_beats_25.mp3'\r\nimport audio2 from './audio/120_stutter_breakbeats_16.mp3'\r\nimport audio3 from './audio/Bass Warwick heavy funk groove on E 120 BPM.mp3'\r\nimport audio4 from './audio/electric guitar coutry slide 120bpm - B.mp3'\r\nimport audio5 from './audio/FUD_120_StompySlosh.mp3'\r\nimport audio6 from './audio/GrooveB_120bpm_Tanggu.mp3'\r\nimport audio7 from './audio/MazePolitics_120_Perc.mp3'\r\nimport audio8 from './audio/PAS3GROOVE1.03B.mp3'\r\nimport audio9 from './audio/SilentStar_120_Em_OrganSynth.mp3'\r\n\r\nconst paths = \r\n    [\r\n        audio1,\r\n        audio2,\r\n        audio3,\r\n        audio4,\r\n        audio5,\r\n        audio6,\r\n        audio7,\r\n        audio8,\r\n        audio9,\r\n    ]\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <SoundGrid paths={paths}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}